class Solution {
public:

    int getLength(ListNode* head){
        ListNode* temp1=head;
        int len=0;
        while(temp1 !=NULL){
            len++;
            temp1=temp1->next;
        }
        return len;

    }


    ListNode* moveHeadByk(ListNode* head,int k){
        ListNode* temp=head;
        while(k--){
            temp=temp->next;
        }
        return temp;
    }

    ListNode* getIntersectionNode(ListNode *headA, ListNode *headB) {
        int l1=getLength(headA);
        int l2=getLength(headB);

        ListNode* ptr1;
        ListNode* ptr2;

        if(l1>l2){
            int k=l1-l2;
            ptr1=moveHeadByk(headA,k);
            ptr2 = headB;
        }
        else{
            int k=l2-l1;
            ptr1=headA;
            ptr2=moveHeadByk(headB,k);
        }

        while(ptr1){
            if(ptr1 == ptr2){
                return ptr1;
            }
            else{
                ptr1=ptr1->next;
                ptr2=ptr2->next;
            }
        }
        return NULL;
    }
};
